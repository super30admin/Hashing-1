All Test Cases passed
class Solution:
    def wordPattern(self, pattern: str, s: str) -> bool:
        dict1={}
        dict2={}
        l2=s.split()
        if len(pattern)!=len(l2):
            return False
        for i in range(0,len(pattern)):
            if pattern[i] not in dict1:
                dict1[pattern[i]]=l2[i]
            else:
                if l2[i]!=dict1[pattern[i]]:
                    return False
            if l2[i] not in dict2:
                dict2[l2[i]]=pattern[i]
            else:
                if dict2[l2[i]]!=pattern[i]:
                    return False
        return True
        

class Solution:
    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:
        if len(strs)==0 or len(strs)==1:
            return [strs]
        p={'a':2, 'b':3, 'c':5, 'd':7, 'e':11, 'f':13, 'g':17, 'h':19, 'i':23, 'j':29, 'k':31, 'l':37, 'm':41, 'n':43, 'o':47, 'p':53, 'q':59, 'r':61, 's':67, 't':71, 'u':73, 'v':79, 'w':83, 'x':89, 'y':97, 'z':101}
        dict1={}
        for x in strs:
            prod=1
            for y in range(0,len(x)):
                prod=prod*p[x[y]]
            if prod not in dict1:
                dict1[prod]=[x]
            else:
                dict1[prod].append(x)
        l2=[]
        for x in dict1:
            l2.append(dict1[x])
        return l2
            
                

class Solution:
    def isIsomorphic(self, s: str, t: str) -> bool:
        if len(s)!=len(t):
            return False
        dict1={}
        dict2={}
        for i in range(0,len(s)):
            if s[i] not in dict1:
                dict1[s[i]]=t[i]
            else:
                if dict1[s[i]]!=t[i]:
                    return False
            if t[i] not in dict2:
                dict2[t[i]]=s[i]
            else:
                if dict2[t[i]]!=s[i]:
                    return False
        return True
                    