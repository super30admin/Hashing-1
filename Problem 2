//Time complexity : O(n)
//Space complexity : O(n)

class Solution {
    public boolean isIsomorphic(String s, String t) {
        int n = s.length(), m = t.length();
        if(n != m) return false;
        int[] map = new int[256];
        for(int i=0; i<256; i++) map[i] = -1;
        boolean[] visited = new boolean[256];
        for(int i=0; i <n; i++){
            if(map[s.charAt(i)] == -1){
                if(visited[t.charAt(i)]) return false;
                visited[t.charAt(i)] = true;
                map[s.charAt(i)] = t.charAt(i);
            }
            else if(map[s.charAt(i)] != t.charAt(i)) return false;
        }
        return true;
    }
}
