//time complexity O(n)
//Leetcode tested
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

public class GroupAnagrams {
    public static void main(String[] args) {
        List<List<String>> result = groupAnagrams(new String[]{"eat","tea","tan","ate","nat","bat"});
        for (int i = 0; i < result.size(); i++) {
            for (int j = 0; j < result.get(i).size(); j++) {
                System.out.print(result.get(i).get(j)+"  ");
            }
            System.out.println();
        }
    }
    public static List<List<String>> groupAnagrams(String[] strs) {
        List<List<String>> groupedAnagrams = new ArrayList<>();
        HashMap<String,List<String>> map  = new HashMap<>();
        for (String current:strs) {
            char[] characters = current.toCharArray();
            Arrays.sort(characters);
            String sorted= new String(characters);
            if(!map.containsKey(sorted)){
                map.put(sorted,new ArrayList<>());
            }
            map.get(sorted).add(current);
        }
        groupedAnagrams.addAll(map.values());
        return  groupedAnagrams;
    }
}
