Isomorphic 
Time complexity : O(NKLOGK)

class Solution {
     public boolean isIsomorphic(String s, String t) {
        if (s.length() != t.length()){
            return false;
        }
        HashMap<Character,Character> sMap = new HashMap<>();
        HashMap<Character,Character> tMap= new HashMap<>();
        for(int i=0;i<s.length();i++){
            char sChar=s.charAt(i);
            char tChar=t.charAt(i);
            if(sMap.containsKey(sChar)){
                if(sMap.get(sChar)!=tChar){
                    return false;
                }
            }
                else{
                    sMap.put(sChar,tChar);
                }
            
            if(tMap.containsKey(tChar)){
                if(tMap.get(tChar)!=sChar){
                    return false;
                }
            }
                else{
                    tMap.put(tChar,sChar);
                }
            
        }
        return true;
        
    }
}


Group Anagrams
TIME COMPLEX : O(NKLOGK)

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        if(strs.length == 0 || strs==null)
            return new ArrayList<>();
        HashMap<String , List<String>> sMap = new HashMap<>();
        for(String s:strs){
            char[] sorted = s.toCharArray();
            Arrays.sort(sorted);
            String value = String.valueOf(sorted);
            if(!sMap.containsKey(value)){
                sMap.put(value,new ArrayList<>());
            }
                sMap.get(value).add(s);
            }
         return new ArrayList<>(sMap.values());
        }
}