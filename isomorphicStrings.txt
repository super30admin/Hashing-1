//Time Complexity : O(n)
//Space Complexity : O(1)
// Did this code successfully run on Leetcode : Yes



class Solution 
{
    public boolean isIsomorphic(String s, String t) 
    {
     
        if(s.length()!=t.length())
        {
            return false;
        }
        HashMap<Character, Character> sMap = new HashMap<Character, Character>();
        HashMap<Character, Character> tMap = new HashMap<Character, Character>();
        
        for(int i=0;i<s.length();i++)
        {
            if(sMap.containsKey(s.charAt(i)))
           {
                if(sMap.get(s.charAt(i))!=t.charAt(i))
                {
                    return false;
                }
           }else
           {
                sMap.put(s.charAt(i), t.charAt(i));
           }
            
            if(tMap.containsKey(t.charAt(i)))
           {
                if(tMap.get(t.charAt(i))!=s.charAt(i))
                {
                    return false;
                }
           }else
           {
                tMap.put(t.charAt(i), s.charAt(i));
           }
        }
        return true;
    }
}