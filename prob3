/*
Time complexity: O(n)
Space complexity: O(n)
Execute successfully on Leetcode: Yes
Any problems faced: No
*/

class Solution {
public:
    bool wordPattern(string s, string t) {
       
    istringstream strcin(t);
      string word;
      vector<string> str;
      while (strcin >> word)
         str.push_back(word);
    
        map<char,string>  my_map;
        map<string,char>  my_map2;
        if(s.length()!=str.size())
            return false;
        for(int i=0;i<s.length();i++)
        {
            char x=s[i];
            string y=str[i];
            if(my_map.find(x)!= my_map.end() && my_map[x]!=y)
            {
                
                return false;
            }
            else
            {
                my_map[x]=y;
            }
        
        
            if(my_map2.find(y)!= my_map2.end() && my_map2[y]!=x)
            {
                return false;
            }
            else
            {
                my_map2[y]=x;
            }
        }
        return true;
    }
};
