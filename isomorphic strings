// Time Complexity : O(n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : no


// Your code here along with comments explaining your approach

class Solution {
    public boolean isIsomorphic(String s, String t) {
        if(t.length() != s.length()) return false;
        HashMap<Character, Character> fHash = new HashMap<>();
        HashMap<Character, Character> sHash = new HashMap<>();
        for(int j = 0; j < s.length(); j++){
            char sChar = s.charAt(j);
            char tChar = t.charAt(j);
            if(fHash.containsKey(sChar)){
                if(fHash.get(sChar) != tChar)return false;
            }
            else{
                fHash.put(sChar, tChar);
            }
            if(sHash.containsKey(tChar)){
                if(sHash.get(tChar) != sChar)return false;
            }
            else{
                sHash.put(tChar, sChar);
            }
        }
        return true;
    }
}