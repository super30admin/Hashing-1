# Hashing-1

## Problem 1:

#Time complexity: o(n*max(strs array elements length))
#Space complexity : o(n)

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) 
    {
       int c[]=
        {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101};
      
     HashMap<Long,List<String>> map = new HashMap<>();
        long sum =0;
     
        for(int i=0;i<strs.length;i++)
        {
            sum=1;
            for(int j=0;j<strs[i].length();j++)
            {
                sum*=c[strs[i].charAt(j)-'a'];
            }
            
                if(map.containsKey(sum))
                {
                    map.get(sum).add(strs[i]);
                }
                else
                {
                  List<String> list = new ArrayList<>();
                  list.add(strs[i]);
                  map.put(sum,list);
                }
             
        }      
 
        return new ArrayList<>(map.values());
        
        
        
        
        
    }
}