/*Time complexity: O(n*k)
Space complexity: O(n)
Execute successfully on Leetcode: No
Any problems faced: last testcase :-runtime error: signed integer overflow: 572754381816871661 * 71 cannot be represented in type 'long long' 
*/

class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<long long, vector<string> > my_map;
	vector<vector<string> > final_set;

	for (long int i = 0; i < strs.size(); i++)
	{
        
		string temp = strs[i];
		long long  key=calculatedP(temp);
        
        // add the value to that key
		my_map[key].push_back(strs[i]);

	}

	for (auto n : my_map)
	{
        // add all the values in the map to the final set
		final_set.push_back(n.second);
	}

	return final_set;

    }
 
 private: long long calculatedP(string s){

        int primes[] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,67,71,73,79,83,89,97,101,103};

        long long mult = 1;

        for(int i = 0; i < s.length(); i++){

            char c = s.at(i);

            mult = mult*(primes[c - 'a']);

        }

        return mult;

    }
    
};
