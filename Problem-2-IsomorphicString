//time complexity - O(n)
//space complexity - O(1)
class Solution {
    public boolean isIsomorphic(String s, String t) {
        HashMap<Character,Character> mainHashMap = new  HashMap<Character,Character>();
        HashMap<Character,Character> secondMap = new  HashMap<Character,Character>();
        if(s.length() != t.length()) return false;
        for(int i = 0 ; i < s.length() ; i++)
        {
            char main = s.charAt(i);
            char secondary = t.charAt(i);
            if(mainHashMap.containsKey(main))
            {
                char check = mainHashMap.get(main);
                if(check != secondary ) return false;
            }
            else
            {
                if(secondMap.containsKey(secondary))
                {
                    return false;
                }
                mainHashMap.put(main,secondary);
                secondMap.put(secondary,main);
            }
        }
        return true;
        
    }
}
