import java.util.*;

/**
 * Problem 2:
 *
 * Given two strings s and t, determine if they are isomorphic. Two strings are isomorphic if the characters in s can be replaced to get t. All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.
 *
 * Example 1: Input: s = "egg", t = "add" Output: true
 *
 * Example 2: Input: s = "foo", t = "bar" Output: false
 *
 * Example 3: Input: s = "paper", t = "title" Output: true Note: You may assume both s and t have the same length.
 */
public class problem2 {
    public boolean isIsomorphic(String s, String t) {

        Map<Character, Character> mapping = new HashMap<>();
        StringBuilder answer = new StringBuilder();

        for(int i=0; i < s.length(); i++){
            if(mapping.containsKey(s.charAt(i))){
                answer.append(mapping.get(s.charAt(i)));
            }else{
                String temp = ""+t.charAt(i);
                if(answer.toString().contains(temp)){
                    return false;
                }
                mapping.put(s.charAt(i), t.charAt(i));
                answer.append(t.charAt(i));
            }
        }
        System.out.println(answer);
        return answer.toString().equals(t);

    }
}
